#kind: ClusterRole
#apiVersion: rbac.authorization.k8s.io/v1
#metadata:
#  name: sample-scheduler-clusterrole
#rules:
#  - apiGroups:
#      - ""
#    resources:
#      - endpoints
#      - events
#    verbs:
#      - create
#      - get
#      - update
#  - apiGroups:
#      - ""
#    resources:
#      - nodes
#    verbs:
#      - get
#      - list
#      - watch
#  - apiGroups:
#      - ""
#    resources:
#      - pods
#    verbs:
#      - delete
#      - get
#      - list
#      - watch
#      - update
#  - apiGroups:
#      - ""
#    resources:
#      - bindings
#      - pods/binding
#    verbs:
#      - create
#  - apiGroups:
#      - ""
#    resources:
#      - pods/status
#    verbs:
#      - patch
#      - update
#  - apiGroups:
#      - ""
#    resources:
#      - replicationcontrollers
#      - services
#    verbs:
#      - get
#      - list
#      - watch
#  - apiGroups:
#      - apps
#      - extensions
#    resources:
#      - replicasets
#    verbs:
#      - get
#      - list
#      - watch
#  - apiGroups:
#      - apps
#    resources:
#      - statefulsets
#    verbs:
#      - get
#      - list
#      - watch
#  - apiGroups:
#      - policy
#    resources:
#      - poddisruptionbudgets
#    verbs:
#      - get
#      - list
#      - watch
#  - apiGroups:
#      - ""
#    resources:
#      - persistentvolumeclaims
#      - persistentvolumes
#    verbs:
#      - get
#      - list
#      - watch
#  - apiGroups:
#      - ""
#    resources:
#      - configmaps
#    verbs:
#      - get
#      - list
#      - watch
#  - apiGroups:
#      - "storage.k8s.io"
#    resources:
#      - storageclasses
#      - csinodes
#    verbs:
#      - get
#      - list
#      - watch
#  - apiGroups:
#      - "coordination.k8s.io"
#    resources:
#      - leases
#    verbs:
#      - create
#      - get
#      - list
#      - update
#  - apiGroups:
#      - "events.k8s.io"
#    resources:
#      - events
#    verbs:
#      - create
#      - patch
#      - update
#---
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: sample-scheduler-sa
#  namespace: kube-system
#---
#kind: ClusterRoleBinding
#apiVersion: rbac.authorization.k8s.io/v1
#metadata:
#  name: sample-scheduler-clusterrolebinding
#  namespace: kube-system
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: ClusterRole
#  name: sample-scheduler-clusterrole
#subjects:
#  - kind: ServiceAccount
#    name: sample-scheduler-sa
#    namespace: kube-system
#

#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: scheduler-sa
#  namespace: kube-system
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRoleBinding
#metadata:
#  name: scheduler
#subjects:
#  - kind: ServiceAccount
#    name: scheduler-sa
#    namespace: kube-system
#roleRef:
#  kind: ClusterRole
#  name: system:kube-scheduler
#  apiGroup: rbac.authorization.k8s.io
#---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kube-system
  name: scheduler-extension-role
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scheduler-extension-rolebinding
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: scheduler-sa
    namespace: kube-system
roleRef:
  kind: Role
  name: scheduler-extension-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scheduler-extension-clusterrole
rules:
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: scheduler-extension-clusterrolebinding
subjects:
  - kind: ServiceAccount
    name: scheduler-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: scheduler-extension-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netmark-scheduler
  namespace: kube-system
  labels:
    component: netmark-scheduler
spec:
  selector:
    matchLabels:
      component: netmark-scheduler
  template:
    metadata:
      labels:
        component: netmark-scheduler
    spec:
      serviceAccountName: scheduler-sa
      priorityClassName: system-cluster-critical
      containers:
        - name: scheduler
          image: netmarks-scheduler:latest
          imagePullPolicy: IfNotPresent
          command:
            - ./scheduler
            - --config=/etc/scheduler.yaml
            - --v=3
#          livenessProbe:
#            httpGet:
#              path: /healthz
#              port: 10251
#            initialDelaySeconds: 15
#          readinessProbe:
#            httpGet:
#              path: /healthz
#              port: 10251